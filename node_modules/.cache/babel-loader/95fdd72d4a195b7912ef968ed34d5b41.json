{"ast":null,"code":"import { useRef, useEffect, createElement, useContext, createContext, useState, useCallback } from 'react';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar isObject = function isObject(x) {\n  return x && typeof x === 'object' && x.constructor === Object;\n};\n\nvar parseValues = function parseValues(values) {\n  return Object.keys(values).reduce(function (acc, key) {\n    return parseValuesName(key, acc);\n  }, // eslint-disable-line\n  values);\n};\n\nvar parseValuesName = function parseValuesName(name, values) {\n  var _extends4, _extends5;\n\n  if (name.indexOf('.') < 0 && name.indexOf('[') < 0) {\n    return values;\n  }\n\n  var value = values[name];\n\n  var _ref = values || {},\n      nextValues = _objectWithoutPropertiesLoose(_ref, [name].map(_toPropertyKey));\n\n  var _name$split = name.split('.'),\n      current = _name$split[0],\n      otherNames = _name$split.slice(1);\n\n  var isArraySyntax = current.match(/\\[([0-9]*)\\]$/g);\n\n  if (isArraySyntax) {\n    var _extends3;\n\n    var _current$split = current.split(/(\\[|\\])/g),\n        currentName = _current$split[0],\n        currentIndex = _current$split[2];\n\n    var currentCollection = values[currentName] || [];\n\n    if (otherNames.length) {\n      var _extends2;\n\n      var _group = _extends({}, values[currentName] && isObject(values[currentName][currentIndex]) ? values[currentName][currentIndex] : {}, (_extends2 = {}, _extends2[otherNames.join('.')] = value, _extends2));\n\n      currentCollection[currentIndex] = parseValues(_group);\n    } else {\n      currentCollection[currentIndex] = value;\n    }\n\n    return _extends({}, nextValues, (_extends3 = {}, _extends3[currentName] = currentCollection, _extends3));\n  }\n\n  var group = _extends({}, isObject(values[current]) ? values[current] : {}, (_extends4 = {}, _extends4[otherNames.join('.')] = value, _extends4));\n\n  return _extends({}, nextValues, (_extends5 = {}, _extends5[current] = parseValues(group), _extends5));\n};\n\nvar getFormValues = function getFormValues(fields) {\n  var values = (fields || []).filter(function (field) {\n    return field.isEnabled;\n  }).reduce(function (obj, field) {\n    var _extends6;\n\n    return _extends({}, obj, (_extends6 = {}, _extends6[field.name] = field.value, _extends6));\n  }, {});\n  return parseValues(values);\n};\n\nvar getFormUniqueId = function getFormUniqueId() {\n  return \"form-\" + Math.random().toString(36).substr(2, 9);\n};\n\nvar getFieldUniqueId = function getFieldUniqueId() {\n  return \"field-\" + Math.random().toString(36).substr(2, 9);\n};\n\nvar getFieldHtmlUniqueId = function getFieldHtmlUniqueId(formId, fieldName) {\n  return \"formiz-\" + formId + \"-field-\" + fieldName;\n};\n\nvar useRefValue = function useRefValue(value) {\n  var ref = useRef(value);\n  ref.current = value;\n  return ref;\n};\n\nvar useSubject = function useSubject(valueRef, throttle) {\n  if (throttle === void 0) {\n    throttle = 100;\n  }\n\n  var subjectRef = useRef(new Subject());\n\n  var push = function push(value) {\n    subjectRef.current.next(value !== null && value !== void 0 ? value : valueRef.current);\n  };\n\n  var subscription = subjectRef.current.pipe(throttleTime(throttle, undefined, {\n    leading: true,\n    trailing: true\n  }));\n  return {\n    push: push,\n    subscription: subscription\n  };\n};\n\nvar useBehaviorSubject = function useBehaviorSubject(valueRef, throttle) {\n  if (throttle === void 0) {\n    throttle = 100;\n  }\n\n  var subjectRef = useRef(new BehaviorSubject(valueRef.current));\n\n  var push = function push(value) {\n    subjectRef.current.next(value !== null && value !== void 0 ? value : valueRef.current);\n  };\n\n  var subscription = subjectRef.current.pipe(throttleTime(throttle, undefined, {\n    leading: true,\n    trailing: true\n  }));\n  return {\n    push: push,\n    subscription: subscription\n  };\n};\n\nvar updateStep = function updateStep(state, partialStepState) {\n  if (!partialStepState || !partialStepState.name) return state;\n  var stepIndex = state.steps.findIndex(function (x) {\n    return x.name === partialStepState.name;\n  });\n  var step = state.steps[stepIndex];\n\n  var newStep = _extends({}, step || {}, partialStepState);\n\n  if (JSON.stringify(newStep) === JSON.stringify(step)) {\n    return state;\n  }\n\n  var newSteps = [].concat(state.steps);\n\n  if (!step) {\n    newSteps.push(newStep);\n  } else {\n    newSteps[stepIndex] = newStep;\n  }\n\n  var orderedSteps = newSteps.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  var enabledSteps = orderedSteps.filter(function (_ref) {\n    var isEnabled = _ref.isEnabled;\n    return isEnabled;\n  });\n  var initialStepName = enabledSteps.length ? enabledSteps[0].name : null;\n\n  var newState = _extends({}, state, {\n    initialStepName: initialStepName,\n    steps: orderedSteps\n  });\n\n  return newState;\n};\n\nvar unregisterStep = function unregisterStep(state, name) {\n  if (!name) return state;\n\n  var newState = _extends({}, state, {\n    steps: state.steps.filter(function (x) {\n      return x.name !== name;\n    })\n  });\n\n  return newState;\n};\n\nvar resetForm = function resetForm(state) {\n  var newState = _extends({}, state, {\n    resetKey: state.resetKey + 1,\n    isSubmitted: false,\n    isValid: true,\n    navigatedStepName: null,\n    steps: state.steps.map(function (step) {\n      return _extends({}, step, {\n        isSubmitted: false,\n        isVisited: false\n      });\n    })\n  });\n\n  return newState;\n};\n\nvar registerField = function registerField(fields, newField) {\n  if (!newField) return fields;\n  var field = fields.find(function (x) {\n    return x.id === newField.id;\n  });\n  var otherFields = fields.filter(function (x) {\n    return x.id !== newField.id;\n  });\n\n  if (JSON.stringify(newField) === JSON.stringify(field)) {\n    return fields;\n  }\n\n  return [].concat(otherFields, [_extends({}, newField)]);\n};\n\nvar updateField = function updateField(fields, newField) {\n  if (!newField) return fields;\n  var field = fields.find(function (x) {\n    return x.id === newField.id;\n  });\n  var otherFields = fields.filter(function (x) {\n    return x.id !== newField.id;\n  });\n\n  if (JSON.stringify(newField) === JSON.stringify(field)) {\n    return fields;\n  }\n\n  return [].concat(otherFields, [_extends({}, newField)]);\n};\n\nvar unregisterField = function unregisterField(fields, fieldId) {\n  if (!fieldId) return fields;\n  var otherFields = fields.filter(function (x) {\n    return x.id !== fieldId;\n  });\n  return [].concat(otherFields);\n};\n\nvar setFieldsValues = function setFieldsValues(fields, objectOfValues) {\n  if (objectOfValues === void 0) {\n    objectOfValues = {};\n  }\n\n  if (!objectOfValues) return fields;\n  var newFields = fields.map(function (field) {\n    var _objectOfValues$field;\n\n    return _extends({}, field, {\n      value: (_objectOfValues$field = objectOfValues[field.name]) !== null && _objectOfValues$field !== void 0 ? _objectOfValues$field : field.value\n    });\n  });\n  return [].concat(newFields);\n};\n\nvar setFieldsExternalErrors = function setFieldsExternalErrors(fields, objectOfErrors) {\n  if (objectOfErrors === void 0) {\n    objectOfErrors = {};\n  }\n\n  if (!objectOfErrors) return fields;\n  var newFields = fields.map(function (field) {\n    return _extends({}, field, {\n      externalErrors: objectOfErrors[field.name] ? [objectOfErrors[field.name], field.externalErrors] : field.externalErrors\n    });\n  });\n  return [].concat(newFields);\n};\n\nvar defaultFormState = {\n  id: /*#__PURE__*/getFormUniqueId(),\n  resetKey: 0,\n  isSubmitted: false,\n  isValidating: false,\n  isValid: true,\n  isPristine: true,\n  steps: [],\n  initialStepName: null,\n  navigatedStepName: null\n};\nvar FormContext = /*#__PURE__*/createContext({});\n\nvar useFormContext = function useFormContext() {\n  return useContext(FormContext);\n};\n\nvar getCurrentStep = function getCurrentStep(formState) {\n  var currentStepName = formState.navigatedStepName || formState.initialStepName;\n  return formState.steps.find(function (x) {\n    return x.name === currentStepName;\n  });\n};\n\nvar Formiz = function Formiz(_ref) {\n  var _ref$autoForm = _ref.autoForm,\n      autoForm = _ref$autoForm === void 0 ? false : _ref$autoForm,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? '' : _ref$children,\n      _ref$connect = _ref.connect,\n      connect = _ref$connect === void 0 ? {} : _ref$connect,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? getFormUniqueId() : _ref$id,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$onSubmit = _ref.onSubmit,\n      onSubmit = _ref$onSubmit === void 0 ? function () {} : _ref$onSubmit,\n      _ref$onValidSubmit = _ref.onValidSubmit,\n      onValidSubmit = _ref$onValidSubmit === void 0 ? function () {} : _ref$onValidSubmit,\n      _ref$onInvalidSubmit = _ref.onInvalidSubmit,\n      onInvalidSubmit = _ref$onInvalidSubmit === void 0 ? function () {} : _ref$onInvalidSubmit,\n      _ref$onValid = _ref.onValid,\n      onValid = _ref$onValid === void 0 ? function () {} : _ref$onValid,\n      _ref$onInvalid = _ref.onInvalid,\n      onInvalid = _ref$onInvalid === void 0 ? function () {} : _ref$onInvalid;\n  var formStateRef = useRef(_extends({}, defaultFormState, {\n    id: id\n  }));\n  var fieldsRef = useRef([]);\n  var keepValuesRef = useRef({});\n  var connectRef = useRefValue(connect.__connect__ || function () {});\n  var onChangeRef = useRefValue(onChange);\n  var onSubmitRef = useRefValue(onSubmit);\n  var onValidSubmitRef = useRefValue(onValidSubmit);\n  var onInvalidSubmitRef = useRefValue(onInvalidSubmit);\n  var onValidRef = useRefValue(onValid);\n  var onInvalidRef = useRefValue(onInvalid);\n  var onFormUpdate = useBehaviorSubject(formStateRef);\n  var onFieldsUpdate = useBehaviorSubject(fieldsRef);\n  var onExternalFieldsUpdate = useSubject(fieldsRef);\n  var onReset = useSubject(formStateRef);\n\n  var checkFormValidity = function checkFormValidity() {\n    var isValid = fieldsRef.current.every(function (field) {\n      var _field$errors, _field$asyncErrors, _field$externalErrors;\n\n      return !(field === null || field === void 0 ? void 0 : (_field$errors = field.errors) === null || _field$errors === void 0 ? void 0 : _field$errors.length) && !(field === null || field === void 0 ? void 0 : (_field$asyncErrors = field.asyncErrors) === null || _field$asyncErrors === void 0 ? void 0 : _field$asyncErrors.length) && !(field === null || field === void 0 ? void 0 : (_field$externalErrors = field.externalErrors) === null || _field$externalErrors === void 0 ? void 0 : _field$externalErrors.length);\n    });\n\n    if (isValid) {\n      onValidRef.current();\n    } else {\n      onInvalidRef.current();\n    }\n\n    return isValid;\n  };\n\n  var checkStepValidity = function checkStepValidity(stepName) {\n    return fieldsRef.current.filter(function (field) {\n      return field.stepName === stepName;\n    }).every(function (field) {\n      var _field$errors2, _field$asyncErrors2, _field$externalErrors2;\n\n      return !(field === null || field === void 0 ? void 0 : (_field$errors2 = field.errors) === null || _field$errors2 === void 0 ? void 0 : _field$errors2.length) && !(field === null || field === void 0 ? void 0 : (_field$asyncErrors2 = field.asyncErrors) === null || _field$asyncErrors2 === void 0 ? void 0 : _field$asyncErrors2.length) && !(field === null || field === void 0 ? void 0 : (_field$externalErrors2 = field.externalErrors) === null || _field$externalErrors2 === void 0 ? void 0 : _field$externalErrors2.length);\n    });\n  };\n\n  var checkFormPristine = function checkFormPristine() {\n    return fieldsRef.current.every(function (field) {\n      return field === null || field === void 0 ? void 0 : field.isPristine;\n    });\n  };\n\n  var checkStepPristine = function checkStepPristine(stepName) {\n    return fieldsRef.current.filter(function (field) {\n      return field.stepName === stepName;\n    }).every(function (field) {\n      return field === null || field === void 0 ? void 0 : field.isPristine;\n    });\n  };\n\n  var checkFormValidating = function checkFormValidating() {\n    return fieldsRef.current.some(function (field) {\n      return field === null || field === void 0 ? void 0 : field.isValidating;\n    });\n  };\n\n  var checkStepValidating = function checkStepValidating(stepName) {\n    return fieldsRef.current.filter(function (field) {\n      return field.stepName === stepName;\n    }).some(function (field) {\n      return field === null || field === void 0 ? void 0 : field.isValidating;\n    });\n  };\n\n  var updateFormState = function updateFormState(stateToUpdate) {\n    var newState = _extends({}, formStateRef.current, stateToUpdate);\n\n    if (JSON.stringify(newState) === JSON.stringify(formStateRef.current)) {\n      return;\n    }\n\n    formStateRef.current = newState;\n    onFormUpdate.push();\n  };\n\n  var goToStep = function goToStep(stepName) {\n    var enabledSteps = formStateRef.current.steps.filter(function (_ref2) {\n      var isEnabled = _ref2.isEnabled;\n      return isEnabled;\n    });\n    var targetedStepIndex = enabledSteps.findIndex(function (_ref3) {\n      var name = _ref3.name;\n      return name === stepName;\n    });\n\n    if (targetedStepIndex < 0) {\n      return;\n    }\n\n    updateFormState({\n      navigatedStepName: enabledSteps[targetedStepIndex].name\n    });\n  };\n\n  var nextStep = function nextStep() {\n    var enabledSteps = formStateRef.current.steps.filter(function (x) {\n      return x.isEnabled;\n    });\n    var stepIndex = enabledSteps.findIndex(function (step) {\n      var _getCurrentStep;\n\n      return step.name === ((_getCurrentStep = getCurrentStep(formStateRef.current)) === null || _getCurrentStep === void 0 ? void 0 : _getCurrentStep.name);\n    });\n    var isLastStep = stepIndex === enabledSteps.length - 1;\n\n    if (isLastStep) {\n      return;\n    }\n\n    goToStep(enabledSteps[stepIndex + 1].name);\n  };\n\n  var prevStep = function prevStep() {\n    var enabledSteps = formStateRef.current.steps.filter(function (x) {\n      return x.isEnabled;\n    });\n    var stepIndex = enabledSteps.findIndex(function (step) {\n      var _getCurrentStep2;\n\n      return step.name === ((_getCurrentStep2 = getCurrentStep(formStateRef.current)) === null || _getCurrentStep2 === void 0 ? void 0 : _getCurrentStep2.name);\n    });\n    var isFirstStep = stepIndex === 0;\n\n    if (isFirstStep) {\n      return;\n    }\n\n    goToStep(enabledSteps[stepIndex - 1].name);\n  };\n\n  var submit = function submit(e) {\n    if (e) e.preventDefault();\n    var steps = formStateRef.current.steps;\n    updateFormState({\n      isSubmitted: true,\n      steps: steps.map(function (step) {\n        return _extends({}, step, {\n          isSubmitted: true\n        });\n      })\n    });\n    var formatedValues = getFormValues(fieldsRef.current);\n\n    if (formStateRef.current.isValid && !formStateRef.current.isValidating) {\n      onValidSubmitRef.current(formatedValues);\n    } else {\n      onInvalidSubmitRef.current(formatedValues);\n    }\n\n    onSubmitRef.current(formatedValues);\n  };\n\n  var submitStep = function submitStep(e) {\n    var _getCurrentStep4, _enabledSteps;\n\n    if (e) e.preventDefault();\n    updateFormState({\n      steps: formStateRef.current.steps.map(function (step) {\n        var _getCurrentStep3;\n\n        return _extends({}, step, {\n          isSubmitted: step.name === ((_getCurrentStep3 = getCurrentStep(formStateRef.current)) === null || _getCurrentStep3 === void 0 ? void 0 : _getCurrentStep3.name) ? true : step.isSubmitted\n        });\n      })\n    });\n    var currentStep = getCurrentStep(formStateRef.current);\n\n    if (!(currentStep === null || currentStep === void 0 ? void 0 : currentStep.isValid) || (currentStep === null || currentStep === void 0 ? void 0 : currentStep.isValidating)) {\n      return;\n    }\n\n    var enabledSteps = formStateRef.current.steps.filter(function (x) {\n      return x.isEnabled;\n    });\n    var currentStepName = (_getCurrentStep4 = getCurrentStep(formStateRef.current)) === null || _getCurrentStep4 === void 0 ? void 0 : _getCurrentStep4.name;\n    var isLastStep = ((_enabledSteps = enabledSteps[enabledSteps.length - 1]) === null || _enabledSteps === void 0 ? void 0 : _enabledSteps.name) === currentStepName;\n\n    if (isLastStep) {\n      submit();\n      return;\n    }\n\n    nextStep();\n  };\n\n  var setFieldsValues$1 = function setFieldsValues$1(objectOfValues) {\n    if (objectOfValues === void 0) {\n      objectOfValues = {};\n    }\n\n    fieldsRef.current = setFieldsValues(fieldsRef.current, objectOfValues);\n    onExternalFieldsUpdate.push();\n  };\n\n  var invalidateFields = function invalidateFields(objectOfErrors) {\n    if (objectOfErrors === void 0) {\n      objectOfErrors = {};\n    }\n\n    fieldsRef.current = setFieldsExternalErrors(fieldsRef.current, objectOfErrors);\n    onExternalFieldsUpdate.push();\n  };\n\n  var getFieldStepName = function getFieldStepName(fieldName) {\n    var _fieldsRef$current$fi, _fieldsRef$current$fi2;\n\n    return (_fieldsRef$current$fi = (_fieldsRef$current$fi2 = fieldsRef.current.find(function (field) {\n      return fieldName === field.name;\n    })) === null || _fieldsRef$current$fi2 === void 0 ? void 0 : _fieldsRef$current$fi2.stepName) !== null && _fieldsRef$current$fi !== void 0 ? _fieldsRef$current$fi : null;\n  };\n\n  var validateForm = function validateForm() {\n    updateFormState({\n      isValid: checkFormValidity(),\n      isPristine: checkFormPristine(),\n      isValidating: checkFormValidating(),\n      steps: formStateRef.current.steps.map(function (step) {\n        return _extends({}, step, {\n          isValid: checkStepValidity(step.name),\n          isPristine: checkStepPristine(step.name),\n          isValidating: checkStepValidating(step.name)\n        });\n      })\n    });\n  };\n\n  var updateStep$1 = function updateStep$1(step) {\n    updateFormState(updateStep(formStateRef.current, step));\n    validateForm();\n  };\n\n  var unregisterStep$1 = function unregisterStep$1(name) {\n    updateFormState(_extends({}, unregisterStep(formStateRef.current, name), {\n      isValid: checkFormValidity()\n    }));\n    validateForm();\n  };\n\n  var registerField$1 = function registerField$1(field) {\n    delete keepValuesRef.current[field.name];\n    fieldsRef.current = registerField(fieldsRef.current, field);\n    onFieldsUpdate.push();\n    onChangeRef.current(getFormValues(fieldsRef.current));\n    validateForm();\n  };\n\n  var updateField$1 = function updateField$1(field) {\n    fieldsRef.current = updateField(fieldsRef.current, field);\n    onFieldsUpdate.push();\n    onChangeRef.current(getFormValues(fieldsRef.current));\n    validateForm();\n  };\n\n  var unregisterField$1 = function unregisterField$1(field, shouldKeepValue) {\n    if (shouldKeepValue) {\n      keepValuesRef.current[field.name] = field.value;\n    }\n\n    fieldsRef.current = unregisterField(fieldsRef.current, field.id);\n    onFieldsUpdate.push();\n    onChangeRef.current(getFormValues(fieldsRef.current));\n    validateForm();\n  };\n\n  var reset = function reset() {\n    updateFormState(resetForm(formStateRef.current));\n    keepValuesRef.current = {};\n    onReset.push();\n  };\n\n  var formMethods = {\n    submit: submit,\n    submitStep: submitStep,\n    setFieldsValues: setFieldsValues$1,\n    invalidateFields: invalidateFields,\n    getFieldStepName: getFieldStepName,\n    goToStep: goToStep,\n    nextStep: nextStep,\n    prevStep: prevStep,\n    reset: reset\n  };\n  var contextValue = {\n    formStateRef: formStateRef,\n    fieldsRef: fieldsRef,\n    actions: {\n      updateStep: updateStep$1,\n      unregisterStep: unregisterStep$1,\n      registerField: registerField$1,\n      updateField: updateField$1,\n      unregisterField: unregisterField$1\n    },\n    formMethods: formMethods,\n    keepValuesRef: keepValuesRef,\n    subjects: {\n      onFormUpdate: onFormUpdate,\n      onFieldsUpdate: onFieldsUpdate,\n      onExternalFieldsUpdate: onExternalFieldsUpdate,\n      onReset: onReset\n    }\n  }; // Connect\n\n  useEffect(function () {\n    connectRef.current(contextValue);\n  }, []);\n  return createElement(FormContext.Provider, {\n    value: contextValue\n  }, !autoForm ? children : createElement(\"form\", {\n    noValidate: true,\n    onSubmit: submit\n  }, children));\n}; // Fields errors\n\n\nvar ErrorFieldWithoutForm = /*#__PURE__*/new Error('A Formiz field always needs to be a children of a `<Formiz>` component.');\nvar ErrorFieldWithoutName = /*#__PURE__*/new Error('A Formiz field (component using a useField hook) always needs a `name` props.'); // Steps errors\n\nvar ErrorStepWithoutForm = /*#__PURE__*/new Error('A <FormizStep> always needs to be a children of a `<Formiz>` component.');\nvar ErrorStepWithoutName = /*#__PURE__*/new Error('A <FormizStep> always needs a `name` props.');\nvar StepContext = /*#__PURE__*/createContext({});\n\nvar useStepContext = function useStepContext() {\n  return useContext(StepContext);\n};\n\nvar FormizStep = function FormizStep(_ref) {\n  var _formStateRef$current;\n\n  var _ref$as = _ref.as,\n      Tag = _ref$as === void 0 ? 'div' : _ref$as,\n      children = _ref.children,\n      name = _ref.name,\n      label = _ref.label,\n      order = _ref.order,\n      _ref$isEnabled = _ref.isEnabled,\n      isEnabled = _ref$isEnabled === void 0 ? true : _ref$isEnabled,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"name\", \"label\", \"order\", \"isEnabled\", \"style\"]);\n\n  if (!name) {\n    throw ErrorStepWithoutName;\n  }\n\n  var _useFormContext = useFormContext(),\n      formStateRef = _useFormContext.formStateRef,\n      actions = _useFormContext.actions,\n      subjects = _useFormContext.subjects;\n\n  if (!subjects || !actions) {\n    throw ErrorStepWithoutForm;\n  }\n\n  var _useState = useState((_formStateRef$current = formStateRef === null || formStateRef === void 0 ? void 0 : formStateRef.current) !== null && _formStateRef$current !== void 0 ? _formStateRef$current : defaultFormState),\n      formState = _useState[0],\n      setFormState = _useState[1];\n\n  var _useState2 = useState({\n    name: name,\n    label: label,\n    isVisited: false,\n    order: order !== null && order !== void 0 ? order : 0\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var isActive = formState.navigatedStepName ? formState.navigatedStepName === name : formState.initialStepName === name; // Subscribe to form state\n\n  useEffect(function () {\n    var subscription = subjects.onFormUpdate.subscription.subscribe(setFormState);\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, []);\n  useEffect(function () {\n    if (formState.navigatedStepName === name && !state.isVisited && isActive) {\n      setState(function (prevState) {\n        return _extends({}, prevState, {\n          isVisited: true\n        });\n      });\n    }\n  }); // Register / Update the step\n\n  useEffect(function () {\n    actions.updateStep(_extends({}, state, {\n      isEnabled: isEnabled\n    }));\n  }, [state, isEnabled]); // Unregister the step\n\n  useEffect(function () {\n    return function () {\n      actions.unregisterStep(name);\n    };\n  }, [name]);\n\n  if (!isEnabled) {\n    return null;\n  }\n\n  return createElement(StepContext.Provider, {\n    value: {\n      name: name\n    }\n  }, createElement(Tag, Object.assign({\n    style: _extends({}, style, {\n      display: !isActive ? 'none' : null\n    })\n  }, rest), isEnabled && children));\n};\n\nvar fieldPropTypes = {\n  name: PropTypes.string.isRequired,\n  debounce: PropTypes.number,\n  defaultValue: PropTypes.any,\n  formatValue: PropTypes.func,\n  onChange: PropTypes.func,\n  required: /*#__PURE__*/PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  validations: /*#__PURE__*/PropTypes.arrayOf( /*#__PURE__*/PropTypes.shape({\n    rule: PropTypes.func,\n    message: PropTypes.node,\n    deps: /*#__PURE__*/PropTypes.arrayOf(PropTypes.any)\n  })),\n  asyncValidations: /*#__PURE__*/PropTypes.arrayOf( /*#__PURE__*/PropTypes.shape({\n    rule: PropTypes.func,\n    message: PropTypes.node,\n    deps: /*#__PURE__*/PropTypes.arrayOf(PropTypes.any)\n  })),\n  keepValue: PropTypes.bool\n};\nvar fieldDefaultProps = {\n  debounce: 100,\n  defaultValue: null,\n  formatValue: function formatValue(val) {\n    return val;\n  },\n  onChange: function onChange() {},\n  required: false,\n  validations: [],\n  asyncValidations: [],\n  keepValue: false\n};\n\nvar getValidationsWithRequired = function getValidationsWithRequired(validations, required) {\n  if (!required && required !== '') {\n    return validations;\n  }\n\n  return [].concat(validations, [{\n    rule: function rule(x) {\n      return !!x || x === 0;\n    },\n    message: required !== true ? required : ''\n  }]);\n};\n\nvar useField = function useField(_ref) {\n  var _formStateRef$current, _keepValuesRef$curren, _keepValuesRef$curren2, _ref2, _formStateRef$current2;\n\n  var name = _ref.name,\n      _ref$debounce = _ref.debounce,\n      debounce = _ref$debounce === void 0 ? fieldDefaultProps.debounce : _ref$debounce,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? fieldDefaultProps.defaultValue : _ref$defaultValue,\n      _ref$formatValue = _ref.formatValue,\n      formatValue = _ref$formatValue === void 0 ? fieldDefaultProps.formatValue : _ref$formatValue,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? fieldDefaultProps.onChange : _ref$onChange,\n      _ref$required = _ref.required,\n      required = _ref$required === void 0 ? fieldDefaultProps.required : _ref$required,\n      _ref$validations = _ref.validations,\n      validations = _ref$validations === void 0 ? fieldDefaultProps.validations : _ref$validations,\n      _ref$asyncValidations = _ref.asyncValidations,\n      asyncValidations = _ref$asyncValidations === void 0 ? fieldDefaultProps.asyncValidations : _ref$asyncValidations,\n      _ref$keepValue = _ref.keepValue,\n      keepValue = _ref$keepValue === void 0 ? fieldDefaultProps.keepValue : _ref$keepValue;\n\n  if (!name) {\n    throw ErrorFieldWithoutName;\n  }\n\n  var _useFormContext = useFormContext(),\n      formStateRef = _useFormContext.formStateRef,\n      actions = _useFormContext.actions,\n      subjects = _useFormContext.subjects,\n      keepValuesRef = _useFormContext.keepValuesRef;\n\n  if (!subjects || !actions || !keepValuesRef) {\n    throw ErrorFieldWithoutForm;\n  }\n\n  var isMountedRef = useRef(true);\n  var stepContext = useStepContext();\n  var stepName = stepContext === null || stepContext === void 0 ? void 0 : stepContext.name;\n\n  var _useState = useState((_formStateRef$current = formStateRef === null || formStateRef === void 0 ? void 0 : formStateRef.current) !== null && _formStateRef$current !== void 0 ? _formStateRef$current : defaultFormState),\n      formState = _useState[0],\n      setFormState = _useState[1];\n\n  var initValue = (_keepValuesRef$curren = (_keepValuesRef$curren2 = keepValuesRef.current) === null || _keepValuesRef$curren2 === void 0 ? void 0 : _keepValuesRef$curren2[name]) !== null && _keepValuesRef$curren !== void 0 ? _keepValuesRef$curren : defaultValue;\n\n  var _useState2 = useState({\n    id: getFieldUniqueId(),\n    resetKey: 0,\n    value: initValue,\n    valueDebounced: initValue,\n    errors: [],\n    asyncErrors: [],\n    externalErrors: [],\n    isValidating: false,\n    isPristine: true,\n    isEnabled: true\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var stateRef = useRefValue(state);\n  var nameRef = useRefValue(name);\n  var stepNameRef = useRefValue(stepName);\n  var validationsRef = useRefValue(getValidationsWithRequired(validations || [], required));\n  var asyncValidationsRef = useRefValue(asyncValidations || []);\n  var debounceRef = useRefValue(debounce);\n  var onChangeRef = useRefValue(onChange);\n  var formatValueRef = useRefValue(formatValue);\n  var defaultValueRef = useRefValue(defaultValue);\n  var keepValueRef = useRefValue(keepValue);\n  var currentStepName = formState.navigatedStepName || formState.initialStepName;\n  var currentStep = formState.steps.find(function (x) {\n    return x.name === currentStepName;\n  }) || null;\n\n  var setValue = function setValue(value) {\n    setState(function (prevState) {\n      return _extends({}, prevState, {\n        externalErrors: [],\n        value: value,\n        isPristine: false\n      });\n    });\n    onChangeRef.current(formatValueRef.current(value), value);\n  }; // Subscribe to form state\n\n\n  useEffect(function () {\n    var subscription = subjects.onFormUpdate.subscription.subscribe(setFormState);\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, []); // Subscribe to external updates\n\n  useEffect(function () {\n    var subscription = subjects.onExternalFieldsUpdate.subscription.subscribe(function (fields) {\n      var field = fields.find(function (x) {\n        return x.id === stateRef.current.id;\n      });\n\n      if (field && JSON.stringify(field) !== JSON.stringify(stateRef.current)) {\n        setState(field);\n      }\n    });\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, []); // Subscribe to reset\n\n  useEffect(function () {\n    var subscription = subjects.onReset.subscription.subscribe(function () {\n      setState(function (prevState) {\n        return _extends({}, prevState, {\n          error: [],\n          externalErrors: [],\n          resetKey: prevState.resetKey + 1,\n          isPristine: true,\n          value: defaultValueRef.current\n        });\n      });\n      onChangeRef.current(formatValueRef.current(defaultValueRef.current), defaultValueRef.current);\n    });\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, []); // Update validations\n\n  useEffect(function () {\n    var validateField = function validateField() {\n      try {\n        /**\r\n         * Sync validations\r\n         */\n        var fieldErrors = (validationsRef.current || []).reduce(function (errors, validation) {\n          return !validation.rule(state.value) ? [].concat(errors, [validation.message]) : errors;\n        }, []);\n        var shouldRunAsyncValidations = !fieldErrors.length && !!(asyncValidationsRef.current || []).length;\n        setState(function (prevState) {\n          return _extends({}, prevState, {\n            errors: fieldErrors,\n            asyncErrors: [],\n            valueDebounced: prevState.value,\n            isValidating: shouldRunAsyncValidations\n          });\n        });\n\n        if (!shouldRunAsyncValidations) {\n          return Promise.resolve();\n        }\n        /**\r\n         * Async validations\r\n         */\n\n\n        return Promise.resolve(Promise.all((asyncValidationsRef.current || []).map(function (validation) {\n          try {\n            return Promise.resolve(validation.rule(state.value)).then(function (isValid) {\n              return _extends({}, validation, {\n                isValid: isValid\n              });\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }))).then(function (rules) {\n          if (!isMountedRef.current || state.value !== stateRef.current.value) {\n            return;\n          }\n\n          var fieldAsyncErrors = rules.reduce(function (errors, validation) {\n            return !validation.isValid ? [].concat(errors, [validation.message]) : errors;\n          }, []);\n          setState(function (prevState) {\n            return _extends({}, prevState, {\n              asyncErrors: fieldAsyncErrors,\n              isValidating: false\n            });\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    if (!debounceRef.current) {\n      validateField();\n      return function () {};\n    }\n\n    var timer = setTimeout(function () {\n      validateField();\n    }, debounceRef.current);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [JSON.stringify(state.value), JSON.stringify((_ref2 = [].concat(validations || [], asyncValidations || [])) === null || _ref2 === void 0 ? void 0 : _ref2.reduce(function (acc, cur) {\n    return [].concat(acc, cur.deps || [], [cur.message]);\n  }, []))]); // Register / Unregister the field\n\n  useEffect(function () {\n    actions.registerField(_extends({}, stateRef.current, {\n      name: nameRef.current,\n      stepName: stepNameRef.current,\n      value: formatValueRef.current(stateRef.current.value)\n    }));\n    return function () {\n      actions.unregisterField(_extends({}, stateRef.current, {\n        name: nameRef.current,\n        stepName: stepNameRef.current,\n        value: formatValueRef.current(stateRef.current.value)\n      }), keepValueRef.current);\n    };\n  }, []); // Update field at form level\n\n  useEffect(function () {\n    actions.updateField(_extends({}, state, {\n      name: name,\n      stepName: stepName,\n      value: formatValueRef.current(state.value)\n    }));\n  }, [name, stepName, JSON.stringify(state)]);\n  useEffect(function () {\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  var isSubmitted = stepName && currentStep && currentStepName === stepName ? currentStep.isSubmitted : formState.isSubmitted;\n  var allErrors = [].concat(state.externalErrors, state.asyncErrors, state.errors);\n  return {\n    errorMessage: allErrors[0],\n    errorMessages: allErrors,\n    id: getFieldHtmlUniqueId((formStateRef === null || formStateRef === void 0 ? void 0 : (_formStateRef$current2 = formStateRef.current) === null || _formStateRef$current2 === void 0 ? void 0 : _formStateRef$current2.id) || '', name),\n    isPristine: state.isPristine,\n    isSubmitted: isSubmitted,\n    isValid: !allErrors.length,\n    isValidating: state.isValidating,\n    setValue: setValue,\n    value: state.value,\n    valueDebounced: state.valueDebounced,\n    resetKey: state.resetKey\n  };\n};\n\nvar shouldSubscribe = function shouldSubscribe(subscribe, key) {\n  if (subscribe === true) {\n    return true;\n  }\n\n  if (subscribe === key) {\n    return true;\n  }\n\n  if (typeof subscribe !== 'object') {\n    return false;\n  }\n\n  if (!subscribe[key]) {\n    return false;\n  }\n\n  return true;\n};\n\nvar useForm = function useForm(_temp) {\n  var _formStateRef$current, _fieldsRef$current, _enabledSteps$, _enabledSteps;\n\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$subscribe = _ref.subscribe,\n      subscribe = _ref$subscribe === void 0 ? true : _ref$subscribe;\n\n  var _useFormContext = useFormContext(),\n      formStateRef = _useFormContext.formStateRef,\n      fieldsRef = _useFormContext.fieldsRef,\n      formMethods = _useFormContext.formMethods,\n      subjects = _useFormContext.subjects;\n\n  var _useState = useState(formMethods),\n      methods = _useState[0],\n      setMethods = _useState[1];\n\n  var _useState2 = useState((_formStateRef$current = formStateRef === null || formStateRef === void 0 ? void 0 : formStateRef.current) !== null && _formStateRef$current !== void 0 ? _formStateRef$current : defaultFormState),\n      localFormState = _useState2[0],\n      setLocalFormState = _useState2[1];\n\n  var _useState3 = useState((_fieldsRef$current = fieldsRef === null || fieldsRef === void 0 ? void 0 : fieldsRef.current) !== null && _fieldsRef$current !== void 0 ? _fieldsRef$current : []),\n      localFields = _useState3[0],\n      setLocalFields = _useState3[1];\n\n  var localFieldsRef = useRefValue(localFields);\n  var subscriptionsRef = useRef([]);\n\n  var subscribeOnFormUpdate = function subscribeOnFormUpdate(subject) {\n    if (!subject || !shouldSubscribe(subscribe, 'form')) {\n      return;\n    }\n\n    var subscription = subject.subscription.subscribe(setLocalFormState);\n    subscriptionsRef.current.push(subscription);\n  };\n\n  var subscribeOnFieldsUpdate = function subscribeOnFieldsUpdate(subject) {\n    if (!subject || !shouldSubscribe(subscribe, 'fields')) {\n      return;\n    }\n\n    var subscribeFields = typeof subscribe === 'object' && typeof subscribe.fields === 'object' ? subscribe.fields : null;\n    var subscription = subject.subscription.subscribe(function (nextFields) {\n      var nextState = subscribeFields ? nextFields.filter(function (x) {\n        return subscribeFields.includes(x.name);\n      }) : nextFields;\n\n      if (JSON.stringify(localFieldsRef.current) === JSON.stringify(nextState)) {\n        return;\n      }\n\n      setLocalFields(nextState);\n    });\n    subscriptionsRef.current.push(subscription);\n  }; // Use the connect property to retrieve the state\n\n\n  var connect = useCallback(function (_ref2) {\n    var _formMethods = _ref2.formMethods,\n        _subjects = _ref2.subjects;\n    setMethods(_formMethods);\n    subscribeOnFormUpdate(_subjects === null || _subjects === void 0 ? void 0 : _subjects.onFormUpdate);\n    subscribeOnFieldsUpdate(_subjects === null || _subjects === void 0 ? void 0 : _subjects.onFieldsUpdate);\n  }, []); // Subscribe (if not used with connect)\n\n  useEffect(function () {\n    subscribeOnFormUpdate(subjects === null || subjects === void 0 ? void 0 : subjects.onFormUpdate);\n    subscribeOnFieldsUpdate(subjects === null || subjects === void 0 ? void 0 : subjects.onFieldsUpdate);\n  }, []); // Clear all subscriptions at unmount\n\n  useEffect(function () {\n    return function () {\n      subscriptionsRef.current.forEach(function (subscription) {\n        return subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n      });\n    };\n  }, []);\n  var enabledSteps = localFormState.steps.filter(function (x) {\n    return x.isEnabled;\n  }).map(function (_ref3, index) {\n    var name = _ref3.name,\n        label = _ref3.label,\n        isSubmitted = _ref3.isSubmitted,\n        isPristine = _ref3.isPristine,\n        isValidating = _ref3.isValidating,\n        isValid = _ref3.isValid,\n        isVisited = _ref3.isVisited;\n    return {\n      index: index,\n      name: name,\n      label: label,\n      isPristine: isPristine !== null && isPristine !== void 0 ? isPristine : false,\n      isSubmitted: isSubmitted !== null && isSubmitted !== void 0 ? isSubmitted : false,\n      isValid: isValid !== null && isValid !== void 0 ? isValid : false,\n      isValidating: isValidating !== null && isValidating !== void 0 ? isValidating : false,\n      isVisited: isVisited !== null && isVisited !== void 0 ? isVisited : false\n    };\n  }).map(function (x, index) {\n    return _extends({}, x, {\n      index: index\n    });\n  });\n  var currentStep = enabledSteps.find(function (x) {\n    return x.name === (localFormState.navigatedStepName || localFormState.initialStepName);\n  }) || null;\n  return _extends({}, methods, shouldSubscribe(subscribe, 'form') ? {\n    resetKey: localFormState.resetKey,\n    isSubmitted: localFormState.isSubmitted,\n    isValid: localFormState.isValid,\n    isValidating: localFormState.isValidating,\n    isPristine: localFormState.isPristine,\n    steps: enabledSteps,\n    currentStep: currentStep || {},\n    isStepPristine: currentStep ? currentStep.isPristine : localFormState.isPristine,\n    isStepValid: currentStep ? currentStep.isValid : localFormState.isValid,\n    isStepValidating: currentStep ? currentStep.isValidating : localFormState.isValidating,\n    isStepSubmitted: currentStep ? currentStep.isSubmitted : localFormState.isSubmitted,\n    isFirstStep: ((_enabledSteps$ = enabledSteps[0]) === null || _enabledSteps$ === void 0 ? void 0 : _enabledSteps$.name) === (currentStep === null || currentStep === void 0 ? void 0 : currentStep.name),\n    isLastStep: ((_enabledSteps = enabledSteps[enabledSteps.length - 1]) === null || _enabledSteps === void 0 ? void 0 : _enabledSteps.name) === (currentStep === null || currentStep === void 0 ? void 0 : currentStep.name)\n  } : {}, shouldSubscribe(subscribe, 'fields') ? {\n    values: getFormValues(localFields)\n  } : {}, {\n    __connect__: connect\n  });\n};\n\nexport { Formiz, FormizStep, fieldDefaultProps, fieldPropTypes, useField, useForm };","map":{"version":3,"sources":["../src/utils/form.utils.ts","../src/utils/global.utils.ts","../src/utils/useRefValue.ts","../src/utils/useSubject.ts","../src/formActions.ts","../src/fieldsActions.ts","../src/Formiz.tsx","../src/errors/index.ts","../src/FormizStep.tsx","../src/types/field.types.ts","../src/useField.ts","../src/useForm.ts"],"names":["isObject","x","parseValues","parseValuesName","name","value","values","nextValues","current","otherNames","isArraySyntax","currentName","currentIndex","currentCollection","group","getFormValues","fields","field","getFormUniqueId","Math","getFieldUniqueId","getFieldHtmlUniqueId","useRefValue","ref","useRef","useSubject","throttle","subjectRef","push","valueRef","subscription","throttleTime","leading","trailing","useBehaviorSubject","updateStep","partialStepState","stepIndex","step","state","newStep","JSON","newSteps","orderedSteps","a","b","enabledSteps","isEnabled","initialStepName","newState","steps","unregisterStep","resetForm","resetKey","isSubmitted","isValid","navigatedStepName","isVisited","registerField","newField","otherFields","updateField","unregisterField","setFieldsValues","objectOfValues","newFields","setFieldsExternalErrors","objectOfErrors","externalErrors","defaultFormState","id","isValidating","isPristine","FormContext","React","useFormContext","useContext","getCurrentStep","currentStepName","formState","Formiz","autoForm","children","connect","onChange","onSubmit","onValidSubmit","onInvalidSubmit","onValid","onInvalid","formStateRef","fieldsRef","keepValuesRef","connectRef","onChangeRef","onSubmitRef","onValidSubmitRef","onInvalidSubmitRef","onValidRef","onInvalidRef","onFormUpdate","onFieldsUpdate","onExternalFieldsUpdate","onReset","checkFormValidity","checkStepValidity","checkFormPristine","checkStepPristine","checkFormValidating","checkStepValidating","updateFormState","goToStep","targetedStepIndex","nextStep","isLastStep","prevStep","isFirstStep","submit","e","formatedValues","submitStep","currentStep","fieldsActions","invalidateFields","getFieldStepName","fieldName","validateForm","formActions","reset","formMethods","contextValue","actions","subjects","useEffect","noValidate","ErrorFieldWithoutForm","ErrorFieldWithoutName","ErrorStepWithoutForm","ErrorStepWithoutName","StepContext","useStepContext","FormizStep","as","Tag","label","order","style","rest","setFormState","useState","setState","isActive","display","fieldPropTypes","PropTypes","debounce","defaultValue","formatValue","required","validations","rule","message","deps","asyncValidations","keepValue","bool","fieldDefaultProps","getValidationsWithRequired","useField","isMountedRef","stepContext","stepName","initValue","valueDebounced","errors","asyncErrors","stateRef","nameRef","stepNameRef","validationsRef","asyncValidationsRef","debounceRef","formatValueRef","defaultValueRef","keepValueRef","setValue","error","prevState","validateField","fieldErrors","validation","shouldRunAsyncValidations","rules","fieldAsyncErrors","timer","setTimeout","clearTimeout","cur","allErrors","errorMessage","errorMessages","shouldSubscribe","subscribe","useForm","methods","setMethods","localFormState","setLocalFormState","localFields","setLocalFields","localFieldsRef","subscriptionsRef","subscribeOnFormUpdate","subject","subscribeOnFieldsUpdate","subscribeFields","nextState","useCallback","_formMethods","_subjects","index","isStepPristine","isStepValid","isStepValidating","isStepSubmitted","__connect__"],"mappings":"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","sourcesContent":["import { FormFields } from '../types/form.types';\n\nconst isObject = (x: any) => x && typeof x === 'object' && x.constructor === Object;\n\nconst parseValues = (values: any) => Object.keys(values)\n  .reduce(\n    (acc, key) => parseValuesName(key, acc), // eslint-disable-line\n    values,\n  );\n\nconst parseValuesName = (name: any, values: any): any => {\n  if (name.indexOf('.') < 0 && name.indexOf('[') < 0) {\n    return values;\n  }\n\n  const value = values[name];\n  const { [name]: deletedKey, ...nextValues } = values || {};\n  const [current, ...otherNames] = name.split('.');\n  const isArraySyntax = current.match(/\\[([0-9]*)\\]$/g);\n\n  if (isArraySyntax) {\n    const [currentName,, currentIndex] = current.split(/(\\[|\\])/g);\n    const currentCollection = values[currentName] || [];\n\n    if (otherNames.length) {\n      const group = {\n        ...(values[currentName] && isObject(values[currentName][currentIndex])\n          ? values[currentName][currentIndex]\n          : {}\n        ),\n        [otherNames.join('.')]: value,\n      };\n\n      currentCollection[currentIndex] = parseValues(group);\n    } else {\n      currentCollection[currentIndex] = value;\n    }\n\n    return {\n      ...nextValues,\n      [currentName]: currentCollection,\n    };\n  }\n\n  const group = {\n    ...(isObject(values[current]) ? values[current] : {}),\n    [otherNames.join('.')]: value,\n  };\n\n  return {\n    ...nextValues,\n    [current]: parseValues(group),\n  };\n};\n\nexport const getFormValues = (fields: FormFields) => {\n  const values = (fields || [])\n    .filter((field) => field.isEnabled)\n    .reduce((obj, field) => ({\n      ...obj,\n      [field.name]: field.value,\n    }), {});\n\n  return parseValues(values);\n};\n","export const getFormUniqueId = (): string => `form-${Math.random().toString(36).substr(2, 9)}`;\nexport const getFieldUniqueId = (): string => `field-${Math.random().toString(36).substr(2, 9)}`;\nexport const getFieldHtmlUniqueId = (formId: string, fieldName: string): string => `formiz-${formId}-field-${fieldName}`;\n","import { useRef } from 'react';\n\nexport const useRefValue = (value: any): React.RefObject<any> => {\n  const ref = useRef(value);\n  ref.current = value;\n  return ref;\n};\n","import React, { useRef } from 'react';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\nexport const useSubject = (valueRef: React.RefObject<any>, throttle = 100) => {\n  const subjectRef = useRef(new Subject());\n  const push = (value?: any) => {\n    subjectRef.current.next(value ?? valueRef.current);\n  };\n\n  const subscription = subjectRef.current\n    .pipe(throttleTime(throttle, undefined, { leading: true, trailing: true }));\n\n  return { push, subscription };\n};\n\n\nexport const useBehaviorSubject = (valueRef: React.RefObject<any>, throttle = 100) => {\n  const subjectRef = useRef(new BehaviorSubject(valueRef.current));\n  const push = (value?: any) => {\n    subjectRef.current.next(value ?? valueRef.current);\n  };\n\n  const subscription = subjectRef.current\n    .pipe(throttleTime(throttle, undefined, { leading: true, trailing: true }));\n\n  return { push, subscription };\n};\n","import { FormState } from './types/form.types';\nimport { StepState } from './types/step.types';\n\nexport const updateStep = (state: FormState, partialStepState: Partial<StepState>): FormState => {\n  if (!partialStepState || !partialStepState.name) return state;\n\n  const stepIndex = state.steps.findIndex((x: StepState) => x.name === partialStepState.name);\n  const step = state.steps[stepIndex];\n\n  const newStep: StepState = {\n    ...(step || {}),\n    ...partialStepState,\n  };\n\n  if (JSON.stringify(newStep) === JSON.stringify(step)) {\n    return state;\n  }\n\n  const newSteps = [...state.steps];\n\n  if (!step) {\n    newSteps.push(newStep);\n  } else {\n    newSteps[stepIndex] = newStep;\n  }\n\n  const orderedSteps = newSteps\n    .sort((a, b) => a.order - b.order);\n\n  const enabledSteps = orderedSteps.filter(({ isEnabled }) => isEnabled);\n\n  const initialStepName = enabledSteps.length ? enabledSteps[0].name : null;\n\n  const newState = {\n    ...state,\n    initialStepName,\n    steps: orderedSteps,\n  };\n\n  return newState;\n};\n\nexport const unregisterStep = (state: FormState, name: string): FormState => {\n  if (!name) return state;\n  const newState = {\n    ...state,\n    steps: state.steps.filter((x) => x.name !== name),\n  };\n  return newState;\n};\n\nexport const resetForm = (state: FormState): FormState => {\n  const newState = {\n    ...state,\n    resetKey: state.resetKey + 1,\n    isSubmitted: false,\n    isValid: true,\n    navigatedStepName: null,\n    steps: state.steps.map((step) => ({\n      ...step,\n      isSubmitted: false,\n      isVisited: false,\n    })),\n  };\n  return newState;\n};\n","import { FormFields } from './types/form.types';\nimport { Field } from './types/field.types';\n\nexport const registerField = (\n  fields: FormFields,\n  newField: Field,\n): FormFields => {\n  if (!newField) return fields;\n\n  const field = fields.find((x: Field) => x.id === newField.id);\n  const otherFields = fields.filter((x: Field) => x.id !== newField.id);\n\n  if (JSON.stringify(newField) === JSON.stringify(field)) {\n    return fields;\n  }\n\n  return [\n    ...otherFields,\n    { ...newField },\n  ];\n};\n\n\nexport const updateField = (\n  fields: FormFields,\n  newField: Field,\n): FormFields => {\n  if (!newField) return fields;\n\n  const field = fields.find((x: Field) => x.id === newField.id);\n  const otherFields = fields.filter((x: Field) => x.id !== newField.id);\n\n  if (JSON.stringify(newField) === JSON.stringify(field)) {\n    return fields;\n  }\n\n  return [\n    ...otherFields,\n    {\n      ...newField,\n    },\n  ];\n};\n\nexport const unregisterField = (\n  fields: FormFields,\n  fieldId: Field['id'],\n): FormFields => {\n  if (!fieldId) return fields;\n  const otherFields = fields.filter((x: Field) => x.id !== fieldId);\n  return [...otherFields];\n};\n\nexport const setFieldsValues = (\n  fields: FormFields,\n  objectOfValues: any = {},\n): FormFields => {\n  if (!objectOfValues) return fields;\n\n  const newFields = fields.map((field: Field) => ({\n    ...field,\n    value: objectOfValues[field.name] ?? field.value,\n  }));\n\n  return [...newFields];\n};\n\nexport const setFieldsExternalErrors = (\n  fields: FormFields,\n  objectOfErrors: any = {},\n): FormFields => {\n  if (!objectOfErrors) return fields;\n\n  const newFields = fields.map((field: Field) => ({\n    ...field,\n    externalErrors: objectOfErrors[field.name]\n      ? [objectOfErrors[field.name], field.externalErrors]\n      : field.externalErrors,\n  }));\n\n  return [...newFields];\n};\n","import * as React from 'react';\nimport {\n  useEffect, useRef, useContext,\n} from 'react';\nimport { Field } from './types/field.types';\nimport {\n  useRefValue, getFormValues, useSubject, useBehaviorSubject, getFormUniqueId,\n} from './utils';\nimport {\n  FormMethods, FormState, FormContextValue, FormizProps, FormFields, KeepValues,\n} from './types/form.types';\nimport { StepState } from './types/step.types';\nimport * as formActions from './formActions';\nimport * as fieldsActions from './fieldsActions';\n\nexport const defaultFormActions: FormMethods = {\n  submit: () => {},\n  setFieldsValues: () => {},\n};\n\nexport const defaultFormState: FormState = {\n  id: getFormUniqueId(),\n  resetKey: 0,\n  isSubmitted: false,\n  isValidating: false,\n  isValid: true,\n  isPristine: true,\n  steps: [],\n  initialStepName: null,\n  navigatedStepName: null,\n};\n\nexport const FormContext = React.createContext<FormContextValue>({});\nexport const useFormContext = () => useContext(FormContext);\n\nconst getCurrentStep = (formState: FormState) => {\n  const currentStepName = formState.navigatedStepName\n    || formState.initialStepName;\n  return formState.steps\n    .find((x) => x.name === currentStepName);\n};\n\nexport const Formiz = ({\n  autoForm = false,\n  children = '',\n  connect = {},\n  id = getFormUniqueId(),\n  onChange = () => {},\n  onSubmit = () => {},\n  onValidSubmit = () => {},\n  onInvalidSubmit = () => {},\n  onValid = () => {},\n  onInvalid = () => {},\n}: FormizProps) => {\n  const formStateRef = useRef<FormState>({\n    ...defaultFormState,\n    id,\n  });\n  const fieldsRef = useRef<FormFields>([]);\n  const keepValuesRef = useRef<KeepValues>({});\n  const connectRef = useRefValue(connect.__connect__ || (() => {}));\n  const onChangeRef = useRefValue(onChange);\n  const onSubmitRef = useRefValue(onSubmit);\n  const onValidSubmitRef = useRefValue(onValidSubmit);\n  const onInvalidSubmitRef = useRefValue(onInvalidSubmit);\n  const onValidRef = useRefValue(onValid);\n  const onInvalidRef = useRefValue(onInvalid);\n\n  const onFormUpdate = useBehaviorSubject(formStateRef);\n  const onFieldsUpdate = useBehaviorSubject(fieldsRef);\n  const onExternalFieldsUpdate = useSubject(fieldsRef);\n  const onReset = useSubject(formStateRef);\n\n  const checkFormValidity = (): boolean => {\n    const isValid = fieldsRef.current\n      .every((field: any) => (\n        !field?.errors?.length\n        && !field?.asyncErrors?.length\n        && !field?.externalErrors?.length\n      ));\n\n    if (isValid) {\n      onValidRef.current();\n    } else {\n      onInvalidRef.current();\n    }\n\n    return isValid;\n  };\n\n  const checkStepValidity = (stepName: string): boolean => fieldsRef.current\n    .filter((field) => field.stepName === stepName)\n    .every((field: any) => (\n      !field?.errors?.length\n      && !field?.asyncErrors?.length\n      && !field?.externalErrors?.length\n    ));\n\n  const checkFormPristine = (): boolean => fieldsRef.current\n    .every((field: any) => field?.isPristine);\n\n  const checkStepPristine = (stepName: string): boolean => fieldsRef.current\n    .filter((field) => field.stepName === stepName)\n    .every((field: any) => field?.isPristine);\n\n  const checkFormValidating = (): boolean => fieldsRef.current\n    .some((field: any) => field?.isValidating);\n\n  const checkStepValidating = (stepName: string): boolean => fieldsRef.current\n    .filter((field) => field.stepName === stepName)\n    .some((field: any) => field?.isValidating);\n\n  const updateFormState = (stateToUpdate: Partial<FormState>): void => {\n    const newState = { ...formStateRef.current, ...stateToUpdate };\n    if (JSON.stringify(newState) === JSON.stringify(formStateRef.current)) {\n      return;\n    }\n    formStateRef.current = newState;\n    onFormUpdate.push();\n  };\n\n  const goToStep = (stepName: string) => {\n    const enabledSteps = formStateRef.current.steps\n      .filter(({ isEnabled }) => isEnabled);\n    const targetedStepIndex = enabledSteps\n      .findIndex(({ name }) => name === stepName);\n\n    if (targetedStepIndex < 0) {\n      return;\n    }\n\n    updateFormState({\n      navigatedStepName: enabledSteps[targetedStepIndex].name,\n    });\n  };\n\n  const nextStep = () => {\n    const enabledSteps = formStateRef.current.steps.filter((x) => x.isEnabled);\n    const stepIndex = enabledSteps\n      .findIndex((step) => step.name === getCurrentStep(formStateRef.current)?.name);\n    const isLastStep = stepIndex === enabledSteps.length - 1;\n\n    if (isLastStep) {\n      return;\n    }\n\n    goToStep(enabledSteps[stepIndex + 1].name);\n  };\n\n  const prevStep = () => {\n    const enabledSteps = formStateRef.current.steps.filter((x) => x.isEnabled);\n    const stepIndex = enabledSteps\n      .findIndex((step) => step.name === getCurrentStep(formStateRef.current)?.name);\n    const isFirstStep = stepIndex === 0;\n\n    if (isFirstStep) {\n      return;\n    }\n\n    goToStep(enabledSteps[stepIndex - 1].name);\n  };\n\n  const submit = (e?: React.FormEvent<HTMLFormElement>) => {\n    if (e) e.preventDefault();\n\n    const { steps } = formStateRef.current;\n    updateFormState({\n      isSubmitted: true,\n      steps: steps.map((step) => ({ ...step, isSubmitted: true })),\n    });\n\n    const formatedValues = getFormValues(fieldsRef.current);\n\n    if (formStateRef.current.isValid && !formStateRef.current.isValidating) {\n      onValidSubmitRef.current(formatedValues);\n    } else {\n      onInvalidSubmitRef.current(formatedValues);\n    }\n\n    onSubmitRef.current(formatedValues);\n  };\n\n  const submitStep = (e?: React.FormEvent<HTMLFormElement>) => {\n    if (e) e.preventDefault();\n\n    updateFormState({\n      steps: formStateRef.current.steps.map((step) => ({\n        ...step,\n        isSubmitted: step.name === getCurrentStep(formStateRef.current)?.name\n          ? true\n          : step.isSubmitted,\n      })),\n    });\n\n    const currentStep = getCurrentStep(formStateRef.current);\n\n    if (!currentStep?.isValid || currentStep?.isValidating) {\n      return;\n    }\n\n    const enabledSteps = formStateRef.current.steps.filter((x) => x.isEnabled);\n    const currentStepName = getCurrentStep(formStateRef.current)?.name;\n    const isLastStep = enabledSteps[enabledSteps.length - 1]?.name === currentStepName;\n\n    if (isLastStep) {\n      submit();\n      return;\n    }\n\n    nextStep();\n  };\n\n  const setFieldsValues = (objectOfValues = {}) => {\n    fieldsRef.current = fieldsActions.setFieldsValues(fieldsRef.current, objectOfValues);\n    onExternalFieldsUpdate.push();\n  };\n\n  const invalidateFields = (objectOfErrors = {}) => {\n    fieldsRef.current = fieldsActions.setFieldsExternalErrors(fieldsRef.current, objectOfErrors);\n    onExternalFieldsUpdate.push();\n  };\n\n  const getFieldStepName = (fieldName: string) => fieldsRef.current\n    .find((field: Field) => fieldName === field.name)?.stepName ?? null;\n\n  const validateForm = () => {\n    updateFormState({\n      isValid: checkFormValidity(),\n      isPristine: checkFormPristine(),\n      isValidating: checkFormValidating(),\n      steps: formStateRef.current.steps.map((step) => ({\n        ...step,\n        isValid: checkStepValidity(step.name),\n        isPristine: checkStepPristine(step.name),\n        isValidating: checkStepValidating(step.name),\n      })),\n    });\n  };\n\n  const updateStep = (step: Partial<StepState>): void => {\n    updateFormState(formActions.updateStep(formStateRef.current, step));\n    validateForm();\n  };\n\n  const unregisterStep = (name: string): void => {\n    updateFormState({\n      ...formActions.unregisterStep(formStateRef.current, name),\n      isValid: checkFormValidity(),\n    });\n    validateForm();\n  };\n\n  const registerField = (field: Field): void => {\n    delete keepValuesRef.current[field.name];\n    fieldsRef.current = fieldsActions.registerField(fieldsRef.current, field);\n    onFieldsUpdate.push();\n    onChangeRef.current(getFormValues(fieldsRef.current));\n    validateForm();\n  };\n\n  const updateField = (field: Field): void => {\n    fieldsRef.current = fieldsActions.updateField(fieldsRef.current, field);\n    onFieldsUpdate.push();\n    onChangeRef.current(getFormValues(fieldsRef.current));\n    validateForm();\n  };\n\n  const unregisterField = (field: Field, shouldKeepValue: boolean): void => {\n    if (shouldKeepValue) {\n      keepValuesRef.current[field.name] = field.value;\n    }\n    fieldsRef.current = fieldsActions.unregisterField(fieldsRef.current, field.id);\n    onFieldsUpdate.push();\n    onChangeRef.current(getFormValues(fieldsRef.current));\n    validateForm();\n  };\n\n  const reset = (): void => {\n    updateFormState(formActions.resetForm(formStateRef.current));\n    keepValuesRef.current = {};\n    onReset.push();\n  };\n\n  const formMethods: FormMethods = {\n    submit,\n    submitStep,\n    setFieldsValues,\n    invalidateFields,\n    getFieldStepName,\n    goToStep,\n    nextStep,\n    prevStep,\n    reset,\n  };\n\n  const contextValue: FormContextValue = {\n    formStateRef,\n    fieldsRef,\n    actions: {\n      updateStep,\n      unregisterStep,\n      registerField,\n      updateField,\n      unregisterField,\n    },\n    formMethods,\n    keepValuesRef,\n    subjects: {\n      onFormUpdate,\n      onFieldsUpdate,\n      onExternalFieldsUpdate,\n      onReset,\n    },\n  };\n\n  // Connect\n  useEffect(() => {\n    connectRef.current(contextValue);\n  }, []);\n\n  return (\n    <FormContext.Provider value={contextValue}>\n      {!autoForm\n        ? children\n        : (\n          <form noValidate onSubmit={submit}>\n            {children}\n          </form>\n        )}\n    </FormContext.Provider>\n  );\n};\n","// Fields errors\nexport const ErrorFieldWithoutForm = new Error('A Formiz field always needs to be a children of a `<Formiz>` component.');\nexport const ErrorFieldWithoutName = new Error('A Formiz field (component using a useField hook) always needs a `name` props.');\n\n// Steps errors\nexport const ErrorStepWithoutForm = new Error('A <FormizStep> always needs to be a children of a `<Formiz>` component.');\nexport const ErrorStepWithoutName = new Error('A <FormizStep> always needs a `name` props.');\n","import * as React from 'react';\nimport {\n  useContext, useEffect, useState,\n} from 'react';\nimport { FormizStepProps, StepState } from './types/step.types';\nimport { ErrorStepWithoutName, ErrorStepWithoutForm } from './errors';\nimport { useFormContext, defaultFormState } from './Formiz';\n\nexport const StepContext = React.createContext<any>({});\nexport const useStepContext = () => useContext(StepContext);\n\nexport const FormizStep = ({\n  as: Tag = 'div',\n  children,\n  name,\n  label,\n  order,\n  isEnabled = true,\n  style = {},\n  ...rest\n}: FormizStepProps) => {\n  if (!name) {\n    throw ErrorStepWithoutName;\n  }\n\n  const {\n    formStateRef,\n    actions,\n    subjects,\n  } = useFormContext();\n\n  if (!subjects || !actions) {\n    throw ErrorStepWithoutForm;\n  }\n\n  const [formState, setFormState] = useState(formStateRef?.current ?? defaultFormState);\n  const [state, setState] = useState<Partial<StepState>>({\n    name,\n    label,\n    isVisited: false,\n    order: order ?? 0,\n  });\n  const isActive = formState.navigatedStepName\n    ? formState.navigatedStepName === name\n    : formState.initialStepName === name;\n\n  // Subscribe to form state\n  useEffect(() => {\n    const subscription = subjects.onFormUpdate\n      .subscription\n      .subscribe(setFormState);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    if (formState.navigatedStepName === name && !state.isVisited && isActive) {\n      setState((prevState) => ({ ...prevState, isVisited: true }));\n    }\n  });\n\n  // Register / Update the step\n  useEffect(() => {\n    actions.updateStep({\n      ...state,\n      isEnabled,\n    });\n  }, [state, isEnabled]);\n\n  // Unregister the step\n  useEffect(() => () => {\n    actions.unregisterStep(name);\n  }, [name]);\n\n  if (!isEnabled) {\n    return null;\n  }\n\n  return (\n    <StepContext.Provider value={{\n      name,\n    }}\n    >\n      <Tag\n        style={{\n          ...style,\n          display: !isActive ? 'none' : null,\n        }}\n        {...rest}\n      >\n        {isEnabled && children}\n      </Tag>\n    </StepContext.Provider>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport type FieldValue = any; // eslint-disable-line\n\nexport interface FieldValidationObject {\n  rule(value: FieldValue): boolean;\n  message?: string;\n  deps?: any[];\n}\nexport interface FieldAsyncValidationObject {\n  rule(value: FieldValue): Promise<boolean>;\n  message?: string;\n  deps?: any[];\n}\n\nexport interface UseFieldProps {\n  name: string;\n  debounce?: number;\n  defaultValue?: FieldValue;\n  formatValue?(value: FieldValue): FieldValue;\n  onChange?(value: FieldValue, rawValue: FieldValue): void;\n  required?: boolean;\n  validations?: FieldValidationObject[];\n  asyncValidations?: FieldAsyncValidationObject[];\n  keepValue?: boolean;\n}\n\nexport const fieldPropTypes = {\n  name: PropTypes.string.isRequired,\n  debounce: PropTypes.number,\n  defaultValue: PropTypes.any,\n  formatValue: PropTypes.func,\n  onChange: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  validations: PropTypes.arrayOf(PropTypes.shape({\n    rule: PropTypes.func,\n    message: PropTypes.node,\n    deps: PropTypes.arrayOf(PropTypes.any),\n  })),\n  asyncValidations: PropTypes.arrayOf(PropTypes.shape({\n    rule: PropTypes.func,\n    message: PropTypes.node,\n    deps: PropTypes.arrayOf(PropTypes.any),\n  })),\n  keepValue: PropTypes.bool,\n};\n\nexport const fieldDefaultProps: Omit<UseFieldProps, 'name'> = {\n  debounce: 100,\n  defaultValue: null,\n  formatValue: (val: FieldValue): FieldValue => val,\n  onChange: () => {},\n  required: false,\n  validations: [],\n  asyncValidations: [],\n  keepValue: false,\n};\n\nexport interface Field {\n  id: string;\n  resetKey: number;\n  name: string;\n  errors: (string | undefined)[];\n  asyncErrors: (string | undefined)[];\n  externalErrors: string[];\n  value: FieldValue;\n  valueDebounced: FieldValue;\n  isValidating: boolean;\n  isPristine: boolean;\n  isEnabled: boolean;\n  stepName?: string;\n}\n\nexport interface FieldState {\n  id: string;\n  resetKey: number;\n  errors: (string | undefined)[];\n  asyncErrors: (string | undefined)[];\n  externalErrors: string[];\n  value: FieldValue;\n  valueDebounced: FieldValue;\n  isValidating: boolean;\n  isPristine: boolean;\n  isEnabled: boolean;\n}\n\nexport interface UseFieldValues {\n  errorMessage?: string | undefined;\n  errorMessages?: (string | undefined)[];\n  id: string;\n  isPristine: boolean;\n  isSubmitted: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  setValue(value: FieldValue): void;\n  value: FieldValue;\n  valueDebounced: FieldValue;\n  resetKey: number;\n}\n","import {\n  useState, useEffect, useRef,\n} from 'react';\nimport {\n  FieldValue,\n  UseFieldProps,\n  UseFieldValues,\n  FieldState,\n  FieldValidationObject,\n  FieldAsyncValidationObject,\n  fieldDefaultProps,\n} from './types/field.types';\nimport { FormFields } from './types/form.types';\nimport { StepState } from './types/step.types';\nimport { ErrorFieldWithoutForm, ErrorFieldWithoutName } from './errors';\nimport { getFieldUniqueId, useRefValue, getFieldHtmlUniqueId } from './utils';\nimport { useFormContext, defaultFormState } from './Formiz';\nimport { useStepContext } from './FormizStep';\n\nconst getValidationsWithRequired = (\n  validations: FieldValidationObject[],\n  required?: boolean | string,\n) => {\n  if (!required && required !== '') {\n    return validations;\n  }\n  return [\n    ...validations,\n    {\n      rule: (x: FieldValue) => !!x || x === 0,\n      message: required !== true ? required : '',\n    }];\n};\n\nexport const useField = ({\n  name,\n  debounce = fieldDefaultProps.debounce,\n  defaultValue = fieldDefaultProps.defaultValue,\n  formatValue = fieldDefaultProps.formatValue,\n  onChange = fieldDefaultProps.onChange,\n  required = fieldDefaultProps.required,\n  validations = fieldDefaultProps.validations,\n  asyncValidations = fieldDefaultProps.asyncValidations,\n  keepValue = fieldDefaultProps.keepValue,\n}: UseFieldProps): UseFieldValues => {\n  if (!name) {\n    throw ErrorFieldWithoutName;\n  }\n\n  const {\n    formStateRef,\n    actions,\n    subjects,\n    keepValuesRef,\n  } = useFormContext();\n\n  if (!subjects || !actions || !keepValuesRef) {\n    throw ErrorFieldWithoutForm;\n  }\n\n  const isMountedRef = useRef(true);\n  const stepContext = useStepContext();\n  const stepName = stepContext?.name;\n\n  const [formState, setFormState] = useState(formStateRef?.current ?? defaultFormState);\n  const initValue = keepValuesRef.current?.[name] ?? defaultValue;\n  const [state, setState] = useState<FieldState>({\n    id: getFieldUniqueId(),\n    resetKey: 0,\n    value: initValue,\n    valueDebounced: initValue,\n    errors: [],\n    asyncErrors: [],\n    externalErrors: [],\n    isValidating: false,\n    isPristine: true,\n    isEnabled: true,\n  });\n  const stateRef = useRefValue(state);\n  const nameRef = useRefValue(name);\n  const stepNameRef = useRefValue(stepName);\n  const validationsRef = useRefValue(getValidationsWithRequired(validations || [], required));\n  const asyncValidationsRef = useRefValue(asyncValidations || []);\n  const debounceRef = useRefValue(debounce);\n  const onChangeRef = useRefValue(onChange);\n  const formatValueRef = useRefValue(formatValue);\n  const defaultValueRef = useRefValue(defaultValue);\n  const keepValueRef = useRefValue(keepValue);\n  const currentStepName = formState.navigatedStepName\n    || formState.initialStepName;\n  const currentStep: (StepState | null) = formState.steps\n    .find((x) => x.name === currentStepName) || null;\n\n  const setValue = (value: FieldValue) => {\n    setState((prevState: FieldState) => ({\n      ...prevState,\n      externalErrors: [],\n      value,\n      isPristine: false,\n    }));\n    onChangeRef.current(formatValueRef.current(value), value);\n  };\n\n  // Subscribe to form state\n  useEffect(() => {\n    const subscription = subjects.onFormUpdate\n      .subscription\n      .subscribe(setFormState);\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Subscribe to external updates\n  useEffect(() => {\n    const subscription = subjects.onExternalFieldsUpdate\n      .subscription\n      .subscribe((fields: FormFields) => {\n        const field = fields.find((x) => x.id === stateRef.current.id);\n        if (field && JSON.stringify(field) !== JSON.stringify(stateRef.current)) {\n          setState(field);\n        }\n      });\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Subscribe to reset\n  useEffect(() => {\n    const subscription = subjects.onReset\n      .subscription\n      .subscribe(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: [],\n          externalErrors: [],\n          resetKey: prevState.resetKey + 1,\n          isPristine: true,\n          value: defaultValueRef.current,\n        }));\n        onChangeRef.current(\n          formatValueRef.current(defaultValueRef.current),\n          defaultValueRef.current,\n        );\n      });\n    return () => subscription.unsubscribe();\n  }, []);\n\n\n  // Update validations\n  useEffect(() => {\n    const validateField = async () => {\n      /**\n       * Sync validations\n       */\n\n      const fieldErrors = (validationsRef.current || [])\n        .reduce(\n          (errors: any, validation: FieldValidationObject) => (!validation.rule(state.value)\n            ? [...errors, validation.message]\n            : errors),\n          [],\n        );\n\n      const shouldRunAsyncValidations = (\n        !fieldErrors.length\n        && !!(asyncValidationsRef.current || []).length\n      );\n\n      setState((prevState: FieldState) => ({\n        ...prevState,\n        errors: fieldErrors,\n        asyncErrors: [],\n        valueDebounced: prevState.value,\n        isValidating: shouldRunAsyncValidations,\n      }));\n\n      if (!shouldRunAsyncValidations) {\n        return;\n      }\n\n      /**\n       * Async validations\n       */\n\n      const rules = await Promise.all((asyncValidationsRef.current || [])\n        .map(async (validation: FieldAsyncValidationObject) => {\n          const isValid = await validation.rule(state.value);\n          return {\n            ...validation,\n            isValid,\n          };\n        }));\n\n      if (\n        !isMountedRef.current\n        || state.value !== stateRef.current.value\n      ) {\n        return;\n      }\n\n      const fieldAsyncErrors: (string | undefined)[] = rules\n        .reduce(\n          (errors: (string | undefined)[], validation: any) => (!validation.isValid\n            ? [...errors, validation.message]\n            : errors),\n          [],\n        );\n\n      setState((prevState: FieldState) => ({\n        ...prevState,\n        asyncErrors: fieldAsyncErrors,\n        isValidating: false,\n      }));\n    };\n\n    if (!debounceRef.current) {\n      validateField();\n      return () => {};\n    }\n\n    const timer = setTimeout(() => {\n      validateField();\n    }, debounceRef.current);\n    return () => clearTimeout(timer);\n  }, [\n    JSON.stringify(state.value),\n    JSON.stringify(\n      [\n        ...(validations || []),\n        ...(asyncValidations || []),\n      ]?.reduce<any>(\n        (acc, cur) => [\n          ...acc,\n          ...(cur.deps || []),\n          cur.message,\n        ],\n        [],\n      ),\n    ),\n  ]);\n\n  // Register / Unregister the field\n  useEffect(() => {\n    actions.registerField({\n      ...stateRef.current,\n      name: nameRef.current,\n      stepName: stepNameRef.current,\n      value: formatValueRef.current(stateRef.current.value),\n    });\n\n    return () => {\n      actions.unregisterField(\n        {\n          ...stateRef.current,\n          name: nameRef.current,\n          stepName: stepNameRef.current,\n          value: formatValueRef.current(stateRef.current.value),\n        },\n        keepValueRef.current,\n      );\n    };\n  }, []);\n\n  // Update field at form level\n  useEffect(() => {\n    actions.updateField({\n      ...state,\n      name,\n      stepName,\n      value: formatValueRef.current(state.value),\n    });\n  }, [name, stepName, JSON.stringify(state)]);\n\n  useEffect(() => () => {\n    isMountedRef.current = false;\n  }, []);\n\n  const isSubmitted = stepName && currentStep && currentStepName === stepName\n    ? currentStep.isSubmitted\n    : formState.isSubmitted;\n\n  const allErrors = [...state.externalErrors, ...state.asyncErrors, ...state.errors];\n\n  return {\n    errorMessage: allErrors[0],\n    errorMessages: allErrors,\n    id: getFieldHtmlUniqueId(formStateRef?.current?.id || '', name),\n    isPristine: state.isPristine,\n    isSubmitted,\n    isValid: !allErrors.length,\n    isValidating: state.isValidating,\n    setValue,\n    value: state.value,\n    valueDebounced: state.valueDebounced,\n    resetKey: state.resetKey,\n  };\n};\n","import {\n  useCallback, useState, useRef, useEffect,\n} from 'react';\nimport { Subscription } from 'rxjs';\nimport {\n  defaultFormState,\n  useFormContext,\n} from './Formiz';\nimport { getFormValues, useRefValue } from './utils';\nimport {\n  FormFields,\n  UseFormProps,\n  UseFormValues,\n} from './types/form.types';\n\nconst shouldSubscribe = (subscribe: UseFormProps['subscribe'], key: 'form' | 'fields') => {\n  if (subscribe === true) {\n    return true;\n  }\n\n  if (subscribe === key) {\n    return true;\n  }\n\n  if (typeof subscribe !== 'object') {\n    return false;\n  }\n\n  if (!subscribe[key]) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const useForm = ({\n  subscribe = true,\n}: UseFormProps = {}): UseFormValues => {\n  const {\n    formStateRef, fieldsRef, formMethods, subjects,\n  } = useFormContext();\n  const [methods, setMethods] = useState(formMethods);\n  const [localFormState, setLocalFormState] = useState(formStateRef?.current ?? defaultFormState);\n  const [localFields, setLocalFields] = useState<FormFields>(fieldsRef?.current ?? []);\n  const localFieldsRef = useRefValue(localFields);\n  const subscriptionsRef = useRef<Array<Subscription>>([]);\n\n  const subscribeOnFormUpdate = (subject: any) => {\n    if (!subject || !shouldSubscribe(subscribe, 'form')) {\n      return;\n    }\n    const subscription = subject\n      .subscription\n      .subscribe(setLocalFormState);\n    subscriptionsRef.current.push(subscription);\n  };\n\n  const subscribeOnFieldsUpdate = (subject: any) => {\n    if (!subject || !shouldSubscribe(subscribe, 'fields')) {\n      return;\n    }\n\n    const subscribeFields = typeof subscribe === 'object' && typeof subscribe.fields === 'object' ? subscribe.fields : null;\n    const subscription = subject\n      .subscription\n      .subscribe((nextFields: FormFields) => {\n        const nextState = subscribeFields\n          ? nextFields.filter((x) => subscribeFields.includes(x.name))\n          : nextFields;\n\n        if (JSON.stringify(localFieldsRef.current) === JSON.stringify(nextState)) {\n          return;\n        }\n\n        setLocalFields(nextState);\n      });\n    subscriptionsRef.current.push(subscription);\n  };\n\n  // Use the connect property to retrieve the state\n  const connect = useCallback(({\n    formMethods: _formMethods,\n    subjects: _subjects,\n  }) => {\n    setMethods(_formMethods);\n    subscribeOnFormUpdate(_subjects?.onFormUpdate);\n    subscribeOnFieldsUpdate(_subjects?.onFieldsUpdate);\n  }, []);\n\n  // Subscribe (if not used with connect)\n  useEffect(() => {\n    subscribeOnFormUpdate(subjects?.onFormUpdate);\n    subscribeOnFieldsUpdate(subjects?.onFieldsUpdate);\n  }, []);\n\n  // Clear all subscriptions at unmount\n  useEffect(() => () => {\n    subscriptionsRef.current.forEach((subscription) => subscription?.unsubscribe());\n  }, []);\n\n  const enabledSteps = localFormState.steps\n    .filter((x) => x.isEnabled)\n    .map(({\n      name,\n      label,\n      isSubmitted,\n      isPristine,\n      isValidating,\n      isValid,\n      isVisited,\n    }, index) => ({\n      index,\n      name,\n      label,\n      isPristine: isPristine ?? false,\n      isSubmitted: isSubmitted ?? false,\n      isValid: isValid ?? false,\n      isValidating: isValidating ?? false,\n      isVisited: isVisited ?? false,\n    }))\n    .map((x, index) => ({ ...x, index }));\n\n  const currentStep = enabledSteps\n    .find((x) => x.name === (localFormState.navigatedStepName || localFormState.initialStepName))\n    || null;\n\n  return {\n    ...methods,\n    ...(shouldSubscribe(subscribe, 'form') ? {\n      resetKey: localFormState.resetKey,\n      isSubmitted: localFormState.isSubmitted,\n      isValid: localFormState.isValid,\n      isValidating: localFormState.isValidating,\n      isPristine: localFormState.isPristine,\n      steps: enabledSteps,\n      currentStep: currentStep || {},\n      isStepPristine: currentStep ? currentStep.isPristine : localFormState.isPristine,\n      isStepValid: currentStep ? currentStep.isValid : localFormState.isValid,\n      isStepValidating: currentStep ? currentStep.isValidating : localFormState.isValidating,\n      isStepSubmitted: currentStep ? currentStep.isSubmitted : localFormState.isSubmitted,\n      isFirstStep: enabledSteps[0]?.name === currentStep?.name,\n      isLastStep: enabledSteps[enabledSteps.length - 1]?.name === currentStep?.name,\n    } : {}),\n    ...(shouldSubscribe(subscribe, 'fields') ? {\n      values: getFormValues(localFields),\n    } : {}),\n    __connect__: connect,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}